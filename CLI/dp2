#!/usr/bin/env ruby
#All the requires in the entire app so ocra will fecth everything
require 'rubygems'
require 'base64'
require 'cgi'
require './commands/command'
require './core/alive'
require './core/authentication'
require './core/conf'
require './core/ctxt'
require './core/dp2'
require './core/helpers'
require './core/job'
require './core/multipart.rb'
require './core/resource'
require './core/rest'
require './core/result_processor'
require './core/scripts'
require './commands/delete_command'
require 'digest'
require './commands/dynamic_commands'
require './commands/help_command.rb'
require './commands/job_command'
require './commands/jobs_command'
require 'logger'
require 'net/http'
require 'nokogiri'
require 'open3'
require 'openssl'
require 'optparse'
require 'time'
require 'uri'
require 'yaml'
def main
	command=checkargs
	if command == nil || command.empty?
		puts "Usage: dp2 command [options]\n"
		puts "type dp2 help for more info\n"
		exit -1	
	end
 
	Ctxt.conf("config.yml")
	dynCommands=DynamicCommands.get
	s_cmds={}
	d_cmds={}
	#static commands
	s_cmds=load(JobsCommand.new,s_cmds)
	s_cmds=load(JobCommand.new,s_cmds)
	s_cmds=load(DeleteCommand.new,s_cmds)
	
	#scripts	
	dynCommands.each{|cmd| d_cmds[cmd.name]=cmd}
	s_cmds["help"]=HelpCommand.new(s_cmds,d_cmds)
	error=""
	hasErr=false
	cmds={}
	cmds=cmds.merge(s_cmds).merge(d_cmds)
	if command!=nil && cmds.has_key?(command)
		begin
			cmds[command].execute(ARGV[1..-1])
		rescue Exception=>e
			error=e.message
			hasErr=true	
		end
	else
		hasErr=true
	end

	if hasErr
		puts "\nERROR: #{error}\n\n" if error!=nil && !error.empty?
		puts cmds["help"].help
	end
end

def checkargs
  cmd=nil
  ARGV.each do |a|
    cmd = a
    break
  end
  return cmd
end
def load(cmd,cmds)
	cmds[cmd.name]=cmd
	return cmds
end

# execution starts here
main 

